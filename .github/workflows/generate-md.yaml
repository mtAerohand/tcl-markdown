name: Generate markdown from TCL documentation

on:
  schedule:
    # 毎日午前2時（UTC）に実行
    - cron: '0 2 * * *'
  workflow_dispatch:  # 手動実行も可能

jobs:
  check-and-sync:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: true
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Check upstream changes
        id: check
        run: |
          # TCLサブモジュールの上流リポジトリの最新コミットを取得
          UPSTREAM_REPO="KQM-git/TCL"
          LATEST_COMMIT=$(curl -s https://api.github.com/repos/$UPSTREAM_REPO/commits/master | jq -r '.sha')
          
          # 現在のサブモジュールのコミットを取得
          cd TCL
          CURRENT_COMMIT=$(git rev-parse HEAD)
          cd ..
          
          echo "Latest upstream commit: $LATEST_COMMIT"
          echo "Current submodule commit: $CURRENT_COMMIT"
          
          if [ "$LATEST_COMMIT" != "$CURRENT_COMMIT" ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "latest_commit=$LATEST_COMMIT" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Update TCL submodule
        if: steps.check.outputs.has_changes == 'true'
        run: |
          cd TCL
          git fetch origin
          git checkout master
          git pull origin master
          cd ..
          
          # サブモジュールの更新をコミット
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add TCL
          git commit -m "Update TCL submodule to latest upstream commit"
      
      - name: Generate markdown documentation
        if: steps.check.outputs.has_changes == 'true'
        run: |
          cd scripts
          node build-markdown.js
          cd ..
      
      - name: Commit and push generated markdown
        if: steps.check.outputs.has_changes == 'true'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          git add outputs/
          git commit -m "Update generated markdown from TCL@${{ steps.check.outputs.latest_commit }}"
          
          git push